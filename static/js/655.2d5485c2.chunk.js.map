{"version":3,"file":"static/js/655.2d5485c2.chunk.js","mappings":"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","sources":["components/MovieList/MovieListStyled.js","components/MovieList/MovieList.jsx","components/AppSearch/AppSearchStyled.js","components/AppSearch/AppSearch.jsx","pages/Movies/Movies.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieWrapp = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const MovieItem = styled.li`\n  width: calc((100% - 5 * 20px) / 4);\n  margin: 20px 10px;\n  border: 1px solid gray;\n  padding-bottom: 10px;\n  border-radius: 5px;\n  background-color: #fff;\n  text-align: center;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%), 0px 2px 1px rgb(0 0 0 / 20%);\n  &:hover,\n  &:focus {\n    scale: 1.02;\n  }\n  & a {\n    text-decoration: none;\n    color: black;\n  }\n  & p {\n    font-size: 20px;\n    font-weight: 500;\n  }\n  & img {\n    width: 100%;\n   \n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport Placeholder from 'images/not-found.png';\nimport { MovieWrapp, MovieItem } from './MovieListStyled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <MovieItem key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : Placeholder\n          }\n          alt={title}\n        />\n        <p>{title}</p>\n      </Link>\n    </MovieItem>\n  ));\n\n  return <MovieWrapp>{elements}</MovieWrapp>;\n};","import styled from 'styled-components';\nimport { FaSearch } from 'react-icons/fa';\n\nexport const WrapApp = styled.div`\n  \n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 32px 12px 12px;\n  border-radius: 15px;\n  border: 2px solid black;\n  &:hover,\n  &:focus {\n    border: 3px solid black;\n    outline: none;\n  }\n`;\nexport const Form = styled.form`\n  margin: 25px 0px;\n  position: relative;\n  left: 590px;\n`;\nexport const Button = styled.button`\n   position: absolute;\n    top: 6px;\n    right: 5px;\n    color: black;\n    border: none;\n    cursor: pointer;\n    background-color: initial;\n\n  &:hover,\n  &:focus {\n    color: gray;   \n  }\n  `;\nexport const IconSearch = styled(FaSearch)`\n  width: 25px;\n  height: 25px;\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\n\nimport {\n  WrapApp,\n  Input,\n  Form,\n  Button,\n  IconSearch,\n} from 'components/AppSearch/AppSearchStyled';\n\nexport default function SearchBox({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = evt => {\n    setSearchQuery(evt.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      Notify.failure('Please, enter the name of film');\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <WrapApp>\n      <Form onSubmit={handleSubmit}>\n        <Button type=\"submit\">\n          <IconSearch />\n        </Button>\n        <Input\n          onChange={handleChange}\n          name=\"searchQuery\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter the movie\"\n          value={searchQuery}\n        />\n      </Form>\n    </WrapApp>\n  );\n}\n","import { MovieList } from 'components/MovieList/MovieList';\nimport SearchBox from 'components/AppSearch/AppSearch';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovie } from 'services/fetchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n\n  const query = searchParams.get('query');\n\n  const searchSubmit = query => {\n    setSearchParams({ query: query });\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n\n        const result = await getSearchMovie(query);\n        setMovies(result.results);\n      } catch {\n        Notify.failure('Oops! We have some problems, try again later');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <SearchBox onSubmit={searchSubmit} />\n      <MovieList movies={movies} />\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '14bbbaf17264a85a2229a09d03b6c904';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["MovieWrapp","styled","MovieItem","MovieList","movies","location","useLocation","elements","map","id","title","poster_path","to","state","from","src","Placeholder","alt","WrapApp","Input","Form","Button","IconSearch","FaSearch","SearchBox","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","Notify","type","onChange","evt","currentTarget","value","toLowerCase","name","autoComplete","autoFocus","placeholder","Movies","setMovies","useSearchParams","searchParams","setSearchParams","loading","setLoading","query","get","useEffect","fetchMovies","getSearchMovie","result","results","Loader","instance","axios","baseURL","params","api_key","getTrendingMovies","data","getMovieById","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}