{"version":3,"file":"static/js/272.167cd62f.chunk.js","mappings":"sOAEaA,E,OAAcC,GAAAA,GAAH,mJ,SCAT,SAASC,EAAT,GAAwC,IAC/CC,EAD8C,EAAhBC,aACPC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9C,OACE,UAACR,EAAD,YACE,qCAAaO,GAAkB,cAC/B,uBAAIC,GAAoB,cAFRF,EAKrB,IAED,OAAO,wBAAKH,GACb,C,aCPc,SAASM,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAON,EAAP,KAAqBO,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,IALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EAC/B,GAAE,CAACC,IAGCR,EAUL,OAL4B,IAAxBA,EAAaa,QACdC,EAAAA,OAAAA,QAAA,wBAAgCd,EAAaa,OAA7C,cAII,SAACf,EAAD,CAAaE,aAAcA,IAThCc,EAAAA,OAAAA,QAAA,4BAUH,C,sLCtBKC,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHiB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAMvB,GAAN,yFACHa,EAASM,IAAT,iBAAuBnB,IADpB,uBAClBoB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAe,mCAAG,WAAMxB,GAAN,yFACNa,EAASM,IAAT,iBAAuBnB,EAAvB,aADM,uBACrBoB,EADqB,EACrBA,KADqB,kBAEtBA,EAAKK,MAFiB,2CAAH,sDAKfhB,EAAe,mCAAG,WAAMT,GAAN,yFACNa,EAASM,IAAT,iBAAuBnB,EAAvB,aADM,uBACrBoB,EADqB,EACrBA,KADqB,kBAEtBA,EAAKvB,SAFiB,2CAAH,qD","sources":["components/Reviews/ReviewsList/ReviewsListStyled.js","components/Reviews/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsItem = styled.li`\n  margin: 20px auto;\n  border: 1px solid grey;\n  padding: 15px;\n  border-radius: 15px;\n  background-color: lightgrey;\n`;","import { ReviewsItem } from \"./ReviewsListStyled\";\n\nexport default function ReviewsList({ movieReviews }) {\n  const results = movieReviews.map(({ id, author, content }) => {\n    return (\n      <ReviewsItem key={id}>\n        <h4>author: {author ? author : 'no_info'}</h4>\n        <p>{content ? content : 'no_info'}</p>\n      </ReviewsItem>\n    );\n  });\n\n  return <ul>{results}</ul>;\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchMovies';\nimport ReviewsList from './ReviewsList/ReviewsList';\nimport { Notify } from 'notiflix';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setMovieReviews);\n  }, [movieId]);\n  \n\n  if (!movieReviews) {\n    Notify.failure(`We have not found reviews`);\n    return\n  }\n\n  if (movieReviews.length !== 0) {\n     Notify.success(`We have found ${movieReviews.length} reviews`);\n  }\n  \n\n  return <ReviewsList movieReviews={movieReviews} />;\n}\n","import axios from 'axios';\n\nconst API_KEY = '14bbbaf17264a85a2229a09d03b6c904';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["ReviewsItem","styled","ReviewsList","results","movieReviews","map","id","author","content","Reviews","useState","setMovieReviews","movieId","useParams","useEffect","getMovieReviews","then","length","Notify","instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","query","getMovieById","getMovieCredits","cast"],"sourceRoot":""}