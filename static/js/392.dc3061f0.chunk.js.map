{"version":3,"file":"static/js/392.dc3061f0.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCardStyled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetailsStyled.js","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CardWrap = styled.div`\n  height: 450px;\n  background-position: right -200px top;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Poster = styled.img`\n  width: 250px;\n`;\n\nexport const Description = styled.div`\n  padding-left: 30px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Link = styled(NavLink)`\n  color: #fff;\n  text-align: center;\n  border-radius: 5px;\n  text-decoration: none;\n  padding: 8px 10px;\n  margin-right: 15px;\n  width: 80px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 500;\n  background: rgb(105, 105, 111);\n  background: linear-gradient(0deg, #595961 0%, #4d4d4f 100%);\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  :hover {\n    background: rgb(0, 3, 255);\n    background: linear-gradient(0deg, #3e3e3f 0%, #212122 100%);\n  }\n`;\n\nexport const WrapperLink = styled.div`\ndisplay: flex;\njustify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const TitleText = styled.h2`\ntext-align: center;\n`","import {\n  CardWrap,\n  Description,\n  Poster,\n  Wrapper,\n  Link,\n  WrapperLink,\n  TitleText,\n} from 'components/MovieCard/MovieCardStyled';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport Placeholder from 'images/not-found.png';\n\nexport default function MovieCard({ movie }) {\n  const location = useLocation();\n  const from = location.state?.from ?? '/movies';\n\n  const {\n    poster_path,\n    title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n    backdrop_path,\n  } = movie;\n\n  const backdrop = `https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${backdrop_path}`;\n  return (\n    <>\n      <CardWrap backdrop_path={backdrop}>\n        <Wrapper>\n          <Poster\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : Placeholder\n            }\n          />\n          <Description>\n            <h1>{title}</h1>\n            <p>\n              <b>{release_date}</b>\n            </p>\n            <p>\n              User score :{' '}\n              <b>\n                {vote_average\n                  ? Math.round((vote_average * 100) / 10)\n                  : 'no_info'}\n                %\n              </b>\n            </p>\n            <h2>Overview</h2>\n            <p>{overview ? overview : 'no_info'}</p>\n            <h2>Genres</h2>\n            <p>\n              {genres ? genres.map(item => item.name).join(', ') : 'no_info'}\n            </p>\n          </Description>\n        </Wrapper>\n      </CardWrap>\n      <TitleText>Additional information</TitleText>\n      <WrapperLink>\n        <Link state={{ from }} to=\"cast\">\n          Cast\n        </Link>\n        <Link state={{ from }} to=\"reviews\">\n          Reviews\n        </Link>\n      </WrapperLink>\n      <Outlet />\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Back = styled.button`\n  color: #fff;\n  text-align: center;\n  border-radius: 5px;\n  text-decoration: none;\n  padding: 8px 10px;\n  margin: 10px 0px;\n  width: 80px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 500;\n  background: rgb(105, 105, 111);\n  background: linear-gradient(0deg, #595961 0%, #4d4d4f 100%);\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  :hover {\n    background: rgb(0, 3, 255);\n    background: linear-gradient(0deg, #3e3e3f 0%, #212122 100%);\n  }\n`;","import MovieCard from 'components/MovieCard/MovieCard';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { getMovieById } from 'services/fetchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { Back } from './MovieDetailsStyled';\nimport { Notify } from 'notiflix';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const from = location.state?.from ?? '/';\n\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n\n        const result = await getMovieById(movieId);\n        setMovie(result);\n      } catch {\n        Notify.failure('Oops! We have some problems, try again later');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Back onClick={goBack}>Back</Back>\n      {movie && <MovieCard movie={movie} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '14bbbaf17264a85a2229a09d03b6c904';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["CardWrap","styled","Poster","Description","Wrapper","Link","NavLink","WrapperLink","TitleText","MovieCard","movie","from","useLocation","state","poster_path","title","vote_average","overview","genres","release_date","backdrop_path","backdrop","src","Placeholder","Math","round","map","item","name","join","to","Back","MovieDetails","useState","setMovie","loading","setLoading","movieId","useParams","location","navigate","useNavigate","useEffect","fetchMovie","getMovieById","result","Notify","Loader","onClick","instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","query","id","getMovieCredits","cast","getMovieReviews","results"],"sourceRoot":""}