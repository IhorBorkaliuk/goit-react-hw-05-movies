{"version":3,"file":"static/js/544.dd000ad9.chunk.js","mappings":"mWAGaA,EAAWC,EAAAA,GAAAA,IAAH,gJAORC,EAASD,EAAAA,GAAAA,IAAH,yCAINE,EAAcF,EAAAA,GAAAA,IAAH,+CAIXG,EAAUH,EAAAA,GAAAA,IAAH,0CAIPI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,gtBA0BJM,EAAcN,EAAAA,GAAAA,IAAH,+GAOXO,EAAYP,EAAAA,GAAAA,GAAH,4C,2GCrDTQ,EAAaR,EAAAA,GAAAA,GAAH,8DAKVS,EAAYT,EAAAA,GAAAA,GAAH,0gB,SCHTU,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAC1B,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMT,GAA1C,WACE,gBACEU,IACEJ,EAAW,0CAC4BA,GACnCK,EAENC,IAAKP,KAEP,uBAAIA,QAVQD,EADU,IAgB5B,OAAO,SAACR,EAAD,UAAaM,GACrB,C,0KChBc,SAASW,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBF,GAAW,GAFK,UAGKG,EAAAA,EAAAA,MAHL,OAGVC,EAHU,OAIhBN,EAAUM,EAAOC,SAJD,gDAMdC,EAAAA,OAAAA,QAAe,gDAND,yBAQhBN,GAAW,GARK,4EAAH,qDAWjBE,GACD,GAAE,IAEEpB,GAKH,4BACGiB,IAAW,SAAC,IAAD,KACZ,SAAC,KAAD,8BACA,SAAC,IAAD,CAAWjB,OAAQA,OAPd,IAUV,C,sLCjCKyB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHR,EAAiB,mCAAG,sGACRI,EAASK,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAASK,IAAI,gBAAiB,CACnDF,OAAQ,CACNK,MAAOA,KAHiB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAM7B,GAAN,yFACHoB,EAASK,IAAT,iBAAuBzB,IADpB,uBAClB0B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAe,mCAAG,WAAM9B,GAAN,yFACNoB,EAASK,IAAT,iBAAuBzB,EAAvB,aADM,uBACrB0B,EADqB,EACrBA,KADqB,kBAEtBA,EAAKK,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMhC,GAAN,yFACNoB,EAASK,IAAT,iBAAuBzB,EAAvB,aADM,uBACrB0B,EADqB,EACrBA,KADqB,kBAEtBA,EAAKR,SAFiB,2CAAH,qD","sources":["components/MovieCard/MovieCardStyled.js","components/MovieList/MovieListStyled.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CardWrap = styled.div`\n  height: 450px;\n  background-position: right -200px top;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Poster = styled.img`\n  width: 250px;\n`;\n\nexport const Description = styled.div`\n  padding-left: 30px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Link = styled(NavLink)`\n  color: #fff;\n  text-align: center;\n  border-radius: 5px;\n  text-decoration: none;\n  padding: 8px 10px;\n  margin-right: 15px;\n  width: 80px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 500;\n  background: rgb(105, 105, 111);\n  background: linear-gradient(0deg, #595961 0%, #4d4d4f 100%);\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  :hover {\n    background: rgb(0, 3, 255);\n    background: linear-gradient(0deg, #3e3e3f 0%, #212122 100%);\n  }\n`;\n\nexport const WrapperLink = styled.div`\ndisplay: flex;\njustify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const TitleText = styled.h2`\ntext-align: center;\n`","import styled from 'styled-components';\n\nexport const MovieWrapp = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const MovieItem = styled.li`\n  width: calc((100% - 5 * 20px) / 4);\n  margin: 20px 10px;\n  border: 1px solid gray;\n  padding-bottom: 10px;\n  border-radius: 5px;\n  background-color: #fff;\n  text-align: center;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%), 0px 2px 1px rgb(0 0 0 / 20%);\n  &:hover,\n  &:focus {\n    scale: 1.02;\n  }\n  & a {\n    text-decoration: none;\n    color: black;\n  }\n  & p {\n    font-size: 20px;\n    font-weight: 500;\n  }\n  & img {\n    width: 100%;\n   \n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport Placeholder from 'images/not-found.png';\nimport { MovieWrapp, MovieItem } from './MovieListStyled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <MovieItem key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : Placeholder\n          }\n          alt={title}\n        />\n        <p>{title}</p>\n      </Link>\n    </MovieItem>\n  ));\n\n  return <MovieWrapp>{elements}</MovieWrapp>;\n};","import { getTrendingMovies } from 'services/fetchMovies';\nimport { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { TitleText } from 'components/MovieCard/MovieCardStyled';\nimport { Notify } from 'notiflix';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const result = await getTrendingMovies();\n        setMovies(result.results);\n      } catch {\n          Notify.failure('Oops! We have some problems, try again later');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <main>\n      {loading && <Loader />}\n      <TitleText>Trending today</TitleText>\n      <MovieList movies={movies} />\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '14bbbaf17264a85a2229a09d03b6c904';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["CardWrap","styled","Poster","Description","Wrapper","Link","NavLink","WrapperLink","TitleText","MovieWrapp","MovieItem","MovieList","movies","location","useLocation","elements","map","id","title","poster_path","to","state","from","src","Placeholder","alt","Home","useState","setMovies","loading","setLoading","useEffect","fetchMovies","getTrendingMovies","result","results","Notify","instance","axios","baseURL","params","api_key","get","data","getSearchMovie","query","getMovieById","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}